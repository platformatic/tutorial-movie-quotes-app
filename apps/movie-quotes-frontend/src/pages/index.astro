---
import Layout from '../layouts/Layout.astro';
import QuoteActionEdit from '../components/QuoteActionEdit.astro';
import QuoteActionDelete from '../components/QuoteActionDelete.astro';
import { quotesApi, gql } from '../lib/quotes-api';

const { data } = await quotesApi.query(gql`
  query {
    quotes {
      id
      quote
      saidBy
      createdAt
      movie {
        id
        name
      }
    }
  }
`);

const quotes = data?.quotes || [];
---

<Layout title="All quotes" page="listing">
  <main>
    {quotes.length > 0 ? quotes.map((quote) => (
      <div class="border-b mb-6">
        <blockquote class="text-2xl mb-0">
          <p class="mb-4">{quote.quote}</p>
        </blockquote>
        <p class="text-xl mt-0 mb-8 text-gray-400">
          â€” {quote.saidBy}, {quote.movie?.name}
        </p>
        <div class="flex flex-col mb-6 text-gray-400">
          <span class="flex items-center">
            <QuoteActionEdit id={quote.id} />
            <QuoteActionDelete id={quote.id} />
          </span>
          <span class="mt-4 text-gray-400 italic">Added {new Date(quote.createdAt).toUTCString()}</span>
        </div>
      </div>
    )) : (
      <p>No movie quotes have been added.</p>
    )}
  </main>
</Layout>

<script>
  import { confirmDeleteQuote } from '../scripts/quote-actions.js'

  addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.form-delete-quote').forEach((deleteForm) => {
      deleteForm.addEventListener('submit', (event) => {
        event.preventDefault()
        confirmDeleteQuote(event.currentTarget)
      })
    })
  })
</script>
